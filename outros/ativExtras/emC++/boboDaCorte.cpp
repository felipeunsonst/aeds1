/*
O Reino dos Emparelhamentos √© governado por um generoso Comendador. A fama do Comendador e de suas grandes qualidades √© conhecida por todos, inclusive em reinos vizinhos. 
Uma de suas mais famosas qualidades √© seu bom humor, que √© nutrido diariamente por um bobo da corte, eleito anualmente no Grande Concurso de Com√©dia (GCC) do reino.
O bobo da corte ajuda a aliviar as tens√µes das diversas reuni√µes pol√≠ticas que o cargo exige, alegrando n√£o s√≥ o Comendador como tamb√©m todo o reino.

O jovem Carlos √© um grande comediante cujo sonho √© se tornar bobo da corte na pr√≥xima temporada. Ele passou os √∫ltimos meses anotando piadas e trocadilhos dos mais diversos 
tipos, muitos dos quais sobre sua pr√≥pria (diminuta) estatura. Chegou a √©poca da elei√ß√£o do bobo da corte, e um total de N candidatos se inscreveram. 
Cada um dos candidatos ter√° cinco minutos para se apresentar perante uma plat√©ia. Ap√≥s as apresenta√ß√µes, cada cidad√£o do Reino dos Emparelhamentos 
poder√° votar em um dos candidatos, e o mais votado ser√° o novo bobo da corte. Caso haja empate entre um ou mais candidatos,
aquele que tiver feito a inscri√ß√£o primeiro √© eleito. Sabendo disso, o jovem Carlos passou noites na frente do escrit√≥rio eleitoral e
garantiu que sua inscri√ß√£o fosse a primeira a ser feita.

Ap√≥s a vota√ß√£o, resta apenas apurar os resultados. A urna eletr√¥nica gera um relat√≥rio com 
ùëÅ
N inteiros, correspondentes ao n√∫mero de votos de cada candidato, ordenados pela ordem de inscri√ß√£o. Sua miss√£o √© determinar se o jovem Carlos foi eleito ou n√£o.

Entrada
A primeira linha da entrada cont√©m um inteiro N, as linhas seguintes conter√£o N inteiros positivos um em cada linha, correspondentes ao n√∫mero de votos recebido
por cada um dos candidatos, em ordem de inscri√ß√£o, Seu programa deve produzir uma √∫nica linha contendo o caractere ‚ÄòS‚Äô caso o jovem Carlos seja eleito bobo da corte, 
ou o caractere ‚ÄòN‚Äô caso contr√°rio.
*/

#include <iostream>
using namespace std;

char verificarResultadoEleicao() {
    int n;
    cin >> n;  // N√∫mero de candidatos
    int votos[n];
    for (int i = 0; i < n; i++) {
        cin >> votos[i];  // N√∫mero de votos recebidos por cada candidato
    }

    int votosCarlos = votos[0];  // Votos do Carlos
    for (int i = 1; i < n; i++) {
        if (votos[i] > votosCarlos) {
            return 'N';  // Se algum outro candidato tem mais votos que o Carlos, ele n√£o foi eleito
        }
    }

    return 'S';  // Se nenhum outro candidato tem mais votos que o Carlos, ele foi eleito
}

int main() {
    char resultado = verificarResultadoEleicao();
    cout << resultado << endl;
    return 0;
}
